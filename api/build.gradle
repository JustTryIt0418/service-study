plugins {
    id 'java'
    id 'org.springframework.boot'           //부모프로젝트 버전 참조
    id 'io.spring.dependency-management'    //부모프로젝트 버전 참조

    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'org.jetbrains.kotlin.plugin.jpa'
}

group = 'org.delivery'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springBootAdminVersion', "3.4.1")
}

dependencies {
    implementation project(":db")
    implementation project(":common")

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

    // spring boot admin
    implementation 'de.codecentric:spring-boot-admin-starter-client'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'io.micrometer:micrometer-core:1.11.1'

    // prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.1'

    // statsd
    implementation 'io.micrometer:micrometer-registry-statsd:1.11.1'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
}

dependencyManagement {
    imports {
        mavenBom("de.codecentric:spring-boot-admin-dependencies:${property("springBootAdminVersion")}")
    }
}

test {
    useJUnitPlatform()
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

allOpen {
    annotation 'jakarta.persistence.Entity'
    annotation 'jakarta.persistence.MappedSuperclass'
    annotation 'jakarta.persistence.Embeddable'
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}